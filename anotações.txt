//1-teoria
    //CONCEITOS DA AULA 
        //promises = certeza que teria um tipo de resposta, sendo um erro ou não 

//1A-introdução ao event loop javascript 
    //CONCEITOS DA AULA 
        //simulando chamada de funções de forma assíncrona (usando setTimeout)
        

//2A-exemplo assíncrono no javascript
            //CONCEITOS DA AULA 
                //testando e simulando várias funções encadeadas com setTimeout, trazendo dados 


//3A-promises no javascript 
            //CONCEITOS DA AULA 
                //trabalahndo com Promises eu tenho a certeza que tenho uma resposta, sendo de sucesso, 
                    //ou de erro 
                //feito simulação, chamando 3 promises, as quais por sua vez, chamam outras funções 
                    //encadeadas 


//4A-preloader com promises no javascript 
            //CONCEITOS DA AULA 
                //testes usando o método '.finally()', que é usado após o catch
    

//5A-javascript async wait      
            //CONCEITOS DA AULA 
                //teste usanso async / await - ele faz com quem o andando do script só prossiga 
                    //após as funções de async e await sejam executados 


2-prática 

1B-preparar projeto javascript-stop event default 
            //CONCEITOS DA AULA 
                //configurado o ambiente em HTML e JS até testando event submit chamando alert 


2B-consultar API com ajax e Promise javascript
            //CONCEITOS DA AULA 
                //realizado testes de requisições de API de CEP via ajax  


3B-consultar API com ajax em javascript 
            //CONCEITOS DA AULA 
                //realizando novamente as requisições de CEP. porem trazendo dincamicamente 
                    //para o HTML


4B-melhorias projeto busca CEP com AJAX no javascript 
            //CONCEITO DA AULA 
                //incluindo preloader e seewt alert 


5B-consultar API com ajax com async e await no javascript 
            CONCEITO DA AULA 
                //OK
